<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/security/oauth2
           http://www.springframework.org/schema/security/spring-security-oauth2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

    <context:component-scan base-package="net.cd.service.security"/>

	
    <http pattern="/oauth/token" create-session="stateless"
    authentication-manager-ref="clientAuthenticationManager">
        <anonymous enabled="false"/>
        <http-basic entry-point-ref="clientAuthenticationEntryPoint"/>
        <access-denied-handler ref="oauthAccessDeniedHandler"/>
        <custom-filter ref="clientCredentialsTokenEndpointFilter" after="BASIC_AUTH_FILTER"/>
    </http>
	
	<http pattern="/**" create-session="never"
          entry-point-ref="oauthAuthenticationEntryPoint" use-expressions="true">
        <anonymous enabled="true"/>
        <custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
        <access-denied-handler ref="oauthAccessDeniedHandler"/>
        <intercept-url pattern="/master-list/**" access="permitAll"/>
    </http>
    
	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased"
		xmlns="http://www.springframework.org/schema/beans">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	
    <beans:bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
    		<beans:property name="realmName" value="cd" />
    </beans:bean>

             
    <beans:bean id="clientAuthenticationEntryPoint"
				class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<beans:property name="realmName" value="cd/client" />
		<beans:property name="typeName" value="Basic" />
	</beans:bean>

    <beans:bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>

 
    <beans:bean id="oauthRequestMatcher" class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
        <beans:constructor-arg value="/oauth/**"/>
    </beans:bean>
    <beans:bean id="customTokenEnhancer" class="net.cd.configuration.CustomTokenEnhancer" />
    
    <!-- <beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" /> -->

    <beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <beans:property name="tokenStore" ref="tokenStore"/>
        <beans:property name="supportRefreshToken" value="true"/>
        <beans:property name="accessTokenValiditySeconds" value="1200" />
        <beans:property name="clientDetailsService" ref="clientDetails"/>
        <beans:property name="tokenEnhancer" ref="customTokenEnhancer" />
    </beans:bean>

    <beans:bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <beans:property name="authenticationManager" ref="clientAuthenticationManager"/>
        <beans:property name="requiresAuthenticationRequestMatcher" ref="oauthRequestMatcher"/>
    </beans:bean>

	
    <beans:bean id="clientDetailsUserService"
                class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <beans:constructor-arg ref="clientDetails"/>
    </beans:bean>
	
    <oauth:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenServices">
        <oauth:authorization-code/>
        <oauth:implicit/>
        <oauth:refresh-token/>
        <oauth:client-credentials/>
        <oauth:password/>
    </oauth:authorization-server>

	<beans:bean id="clientDetails" class="net.cd.service.security.jdbc.CdOAuth2JdbcClientDetailsService">
        <beans:constructor-arg index="0" ref="dataSource"/>
    </beans:bean>
	
	<beans:bean id="customUserDetailsService" class="net.cd.configuration.CustomUserDetailsService" />
    
    <authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder hash="md5" ></password-encoder>
		</authentication-provider>
	</authentication-manager>
	
    <oauth:resource-server id="resourceServerFilter" token-services-ref="tokenServices"/>

    <oauth:expression-handler id="oauthExpressionHandler"/>

    <oauth:web-expression-handler id="oauthWebExpressionHandler"/>

    <authentication-manager id="clientAuthenticationManager"  xmlns="http://www.springframework.org/schema/security">
        <authentication-provider user-service-ref="clientDetailsUserService">
        </authentication-provider>
    </authentication-manager>


    <global-method-security secured-annotations="enabled" pre-post-annotations="enabled">
        <expression-handler ref="oauthExpressionHandler"/>
    </global-method-security>

</beans:beans>

